# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
    paths-ignore:
      - "**.md"

  pull_request_target:
    branches: [ "master" ]
    paths-ignore:
      - "**.md"
      - "**.yml"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Cache python libs
        uses: actions/cache@v3
        id: cache-pip # needed in if test
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip

      - name: Upgrade python tools
        run: |
          python -m pip install --upgrade pip
          pip install -U platformio adafruit-nrfutil littlefs-python
      - name: Upgrade platformio
        run: |
          pio upgrade

      - name: Build ESP32
        run: |
          pio run

      - name: Store binaries as an artifact
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          automatic_release_tag: 'latest'
          prerelease: false
          files: |
            .pio/build/ttgo-t-beam/firmware.bin
